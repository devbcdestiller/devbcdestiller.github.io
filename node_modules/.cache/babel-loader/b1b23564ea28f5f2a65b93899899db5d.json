{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"src\"];\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Personal Project\"), /*#__PURE__*/_createElementVNode(\"h2\", null, \"What's Cat API\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.isMirrored ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"img\", {\n    src: _ctx.imgSrc,\n    alt: \"\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2)]), _hoisted_3, _createElementVNode(\"div\", null, _toDisplayString(_ctx.body), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.technologies, tech => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: tech.id\n    }, _toDisplayString(tech.name), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;gCAKSA,oBAGM,KAHN,EAGM,IAHN,EAGM,cAFFA,oBAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CAEE,eADFA,oBAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,CACE,CAHN;;AAAA;;;SAJMC,iCAAXC,oBAcM,KAdN,EAcMC,UAdN,EAcM,CAbDH,oBAEM,KAFN,EAEM,IAFN,EAEM,CADFA,oBAA0B,KAA1B,EAA0B;AAApBI,OAAG,EAAEH,WAAe;AAAPI,OAAG,EAAC;AAAG,GAA1B;;AAAA,eACE,CAFN,CAaC,EAVDC,UAUC,EANDN,oBAEM,KAFN,EAEM,IAFN,EAEMO,iBADCN,SACD,CAFN,EACW;AAAA;AADX,GAMC,EAHDD,oBAEM,KAFN,EAEM,IAFN,EAEM,oBADFE,oBAAkEM,SAAlE,EAAkE,IAAlE,EAAkEC,YAAhDR,iBAAgD,EAAxDS,IAAoB,IAAhB;yBAAdR,oBAAkE,GAAlE,EAAkE;AAAjCS,SAAG,EAAED,IAAI,CAACE;AAAuB,KAAlE,mBAAkDF,IAAI,CAACG,KAAvD,EAA2D;AAAA;AAA3D;GAAkE,CAAlE;;AAAA,GACE,EAFN,CAGC,CAdN","names":["_createElementVNode","_ctx","_createElementBlock","_hoisted_1","src","alt","_hoisted_3","_toDisplayString","_Fragment","_renderList","tech","key","id","name"],"sourceRoot":"","sources":["/home/minty/projects/Web Apps/web-portfolio/src/components/items/ProjectItems.vue"],"sourcesContent":["<template>\n    <div v-if=\"isMirrored\">\n         <div>\n             <img :src=\"imgSrc\" alt=\"\">\n         </div>\n         <div>\n             <h3>Personal Project</h3>\n             <h2>What's Cat API</h2>\n         </div>\n         <div>\n             {{ body }}\n         </div>\n         <div>\n             <p v-for=\"tech in technologies\" :key=\"tech.id\">{{ tech.name }}</p>\n         </div>\n    </div>\n</template>\n\n<script setup>\nconst props = defineProps({\n    info: Object\n})\n\n</script>\n"]},"metadata":{},"sourceType":"module"}